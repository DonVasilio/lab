{"version":3,"sources":["Services/Request.js","App.js","reportWebVitals.js","index.js"],"names":["Request","getStudents","fetch","then","res","json","getStudentsOnGroup","group","App","state","activeGroup","students","this","setState","className","onClick","Component","JournalTable","Table","bordered","props","map","student","id","name","surname","second_name","study_group_id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAUeA,EAVC,CACdC,YADc,WAEZ,OAAOC,MAAM,0CAA0CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGzEC,mBALc,SAKKC,GACjB,OAAOL,MAAM,4CAA8CK,GAAOJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,Y,OCAhFG,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,EACbC,SAAU,MAJA,E,qDAQd,WAAqB,IAAD,OAClBX,EAAQM,mBAAmBM,KAAKH,MAAMC,aAAaP,MAAK,SAACQ,GACvD,EAAKE,SAAS,CAACF,SAAUA,S,oBAI7B,WAAU,IAAD,OACP,OACI,sBAAKG,UAAU,MAAf,UACGF,KAAKH,MAAME,SAAW,cAAC,EAAD,CACnBA,SAAUC,KAAKH,MAAME,WAAc,KACvC,wBAAQI,QAAS,WACff,EAAQM,mBAAmB,GAAGH,MAAK,SAACQ,GAClC,EAAKE,SAAS,CAACF,SAAUA,IACzB,EAAKE,SAAS,CAACH,YAAa,QAHhC,oDAMA,wBAAQK,QAAS,WACff,EAAQM,mBAAmB,GAAGH,MAAK,SAACQ,GAClC,EAAKE,SAAS,CAACF,SAAUA,IACzB,EAAKE,SAAS,CAACH,YAAa,QAHhC,oDAMA,wBAAQK,QAAS,WACff,EAAQM,mBAAmB,GAAGH,MAAK,SAACQ,GAClC,EAAKE,SAAS,CAACF,SAAUA,IACzB,EAAKE,SAAS,CAACH,YAAa,QAHhC,2D,GAhCQM,aA2CZC,E,4JACJ,WACE,OAAO,eAACC,EAAA,EAAD,CAAOC,UAAQ,EAAf,UACL,gCACA,+BACE,mCACA,4EACA,oDACA,kFACA,2EAGF,gCACCP,KAAKQ,MAAMT,SAASU,KAAI,SAACC,GACxB,OAAO,+BACL,6BAAKA,EAAQC,KACb,6BAAKD,EAAQE,OACb,6BAAKF,EAAQG,UACb,6BAAKH,EAAQI,cACb,6BAAKJ,EAAQK,gC,GAnBIX,aA2BZR,IChEAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c9d2003.chunk.js","sourcesContent":["const Request = {\n  getStudents() {\n    return fetch(\"http://localhost:8080/student/show/all\").then(res => res.json());\n  },\n\n  getStudentsOnGroup(group) {\n    return fetch(\"http://localhost:8080/student/show/group/\" + group).then(res => res.json());\n  }\n};\n\nexport default Request\n","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Navbar, Nav, Dropdown, Tabs, Table, Tab } from \"react-bootstrap\";\nimport {Component} from \"react\";\nimport Request from \"./Services/Request\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeGroup: 1,\n      students: null\n    };\n  }\n\n  componentDidMount() {\n    Request.getStudentsOnGroup(this.state.activeGroup).then((students) => {\n      this.setState({students: students});\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          {this.state.students ? <JournalTable\n              students={this.state.students}/> : null}\n          <button onClick={() => {\n            Request.getStudentsOnGroup(1).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 1});\n            });\n          }}>Группа 1</button>\n          <button onClick={() => {\n            Request.getStudentsOnGroup(2).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 2});\n            });\n          }}>Группа 2</button>\n          <button onClick={() => {\n            Request.getStudentsOnGroup(3).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 3});\n            });\n          }}>Группа 3</button>\n        </div>\n    );\n  }\n}\n\nclass JournalTable extends Component {\n  render() {\n    return <Table bordered>\n      <thead>\n      <tr>\n        <th>#</th>\n        <th>Фамилия</th>\n        <th>Имя</th>\n        <th>Отчество</th>\n        <th>Группа</th>\n      </tr>\n      </thead>\n      <tbody>\n      {this.props.students.map((student) => {\n        return <tr>\n          <td>{student.id}</td>\n          <td>{student.name}</td>\n          <td>{student.surname}</td>\n          <td>{student.second_name}</td>\n          <td>{student.study_group_id}</td>\n        </tr>\n      })}\n      </tbody>\n    </Table>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
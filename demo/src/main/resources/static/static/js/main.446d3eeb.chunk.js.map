{"version":3,"sources":["Services/Request.js","App.js","reportWebVitals.js","index.js"],"names":["Request","getStudents","fetch","then","res","json","getStudentsOnGroup","group","getTypeAndGroup","getWholeJournal","getAllGroup","updateStudent","ids","idg","getStudentsOnGroupSorted","App","state","activeGroup","students","subjectType","wholeJournal","groups","this","setState","className","onClick","Component","JournalTable","Table","bordered","props","map","student","id","surname","name","second_name","study_group_id","Dropdown","Toggle","variant","size","Menu","Header","Item","alert","JournalForTypeAndSubject","subject","type","WholeJournal","SURNAME","NAME","SECOND_NAME","GR","COUNT","style","color","MARK","SUBJECT","TYPE","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.446d3eeb.chunk.js","sourcesContent":["const Request = {\n  getStudents() {\n    return fetch(\"http://localhost:8080/student/show/all\").then(res => res.json());\n  },\n\n  getStudentsOnGroup(group) {\n    return fetch(\"http://localhost:8080/student/show/group/\" + group).then(res => res.json());\n  },\n\n  getTypeAndGroup(){\n    return fetch(\"http://localhost:8080/subject/type/show\").then(res => res.json());\n  },\n\n  getWholeJournal(){\n    return fetch(\"http://localhost:8080/journal/whole\").then(res => res.json());\n  },\n\n  getAllGroup(){\n    return fetch(\"http://localhost:8080/group/show/all\").then(res => res.json());\n  },\n\n  updateStudent(ids, idg){\n    return fetch(\"http://localhost:8080/student/update/id/\" + ids + \"/\" + idg);\n  },\n\n  getStudentsOnGroupSorted(group) {\n    return fetch(\"http://localhost:8080/student/show/group/sorted/\" + group).then(res => res.json());\n  }\n};\n\nexport default Request\n","import './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Navbar, Nav, Dropdown, Tabs, Table, Tab } from \"react-bootstrap\";\nimport {Component} from \"react\";\nimport Request from \"./Services/Request\"\nimport 'color'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeGroup: 1,\n      students: null,\n      subjectType:null,\n      wholeJournal:null,\n      groups:null\n    };\n  }\n\n  componentDidMount() {\n    Request.getStudentsOnGroup(this.state.activeGroup).then((students) => {\n      this.setState({students: students});\n    });\n    Request.getAllGroup().then((groups) => {\n      this.setState({groups: groups});\n    });\n    Request.getTypeAndGroup().then((subjectType) => {\n      this.setState({subjectType: subjectType});\n    });\n    Request.getWholeJournal().then((wholeJournal) => {\n      this.setState({wholeJournal: wholeJournal});\n    });\n\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          {this.state.students && this.state.groups ? <JournalTable\n              students={this.state.students} groups={this.state.groups}/> : null}\n          <button onClick={() => {\n            Request.getStudentsOnGroup(1).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 1});\n            });\n          }}>Группа 1</button>\n          <button onClick={() => {\n            Request.getStudentsOnGroup(2).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 2});\n            });\n          }}>Группа 2</button>\n          <button onClick={() => {\n            Request.getStudentsOnGroup(3).then((students) => {\n              this.setState({students: students});\n              this.setState({activeGroup: 3});\n            });\n          }}>Группа 3</button>\n          <button onClick={() => {\n            Request.getStudentsOnGroupSorted(this.state.activeGroup).then((students) => {\n              this.setState({students: students});\n            });\n          }}>Отсортировать по фамилии</button>\n\n          {this.state.subjectType ? <JournalForTypeAndSubject\n              subjectType={this.state.subjectType}/> : null}\n\n          {this.state.wholeJournal ? <WholeJournal\n              wholeJournal={this.state.wholeJournal}/> : null}\n\n        </div>\n    );\n  }\n}\n\nclass JournalTable extends Component {\n\n  render() {\n    return <Table bordered>\n      <thead>\n      <tr>\n        <th>#</th>\n        <th>Фамилия</th>\n        <th>Имя</th>\n        <th>Отчество</th>\n        <th>Группа</th>\n      </tr>\n      </thead>\n      <tbody>\n      {this.props.students.map((student) => {\n        return <tr>\n          <td>{student.id}</td>\n          <td>{student.surname}</td>\n          <td>{student.name}</td>\n          <td>{student.second_name}</td>\n          <td>{student.study_group_id}</td>\n          <td>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"link\" size=\"sm\">\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Header>Перевести в другую группу</Dropdown.Header>\n                {\n                    this.props.groups.map((group) => {\n                      return(\n                          <Dropdown.Item key={student.study_group_id}\n                                         onClick={() => (\n                                             Request.updateStudent(student.id, group.id).then(() => {\n                                             alert('Перевод студента с id ' +\n                                                 student.id +\n                                                 ' в группу ' + group.id + ' произведён');\n                                             })\n                                         )}\n                          >\n                            {group.name}\n                          </Dropdown.Item>\n                          )\n                    })\n                }\n\n              </Dropdown.Menu>\n            </Dropdown>\n          </td>\n        </tr>\n      })}\n      </tbody>\n    </Table>\n  }\n}\n\nclass JournalForTypeAndSubject extends Component {\n  render() {\n    return <Table bordered>\n      <thead>\n      <tr>\n        <th>Предмет</th>\n        <th>Тип</th>\n      </tr>\n      </thead>\n      <tbody>\n      {this.props.subjectType.map((subjectType) => {\n        return <tr>\n          <td>{subjectType.subject}</td>\n          <td>{subjectType.type}</td>\n        </tr>\n      })}\n      </tbody>\n    </Table>\n  }\n}\n\nclass WholeJournal extends Component{\n  render() {\n    return <Table bordered>\n      <thead>\n      <tr>\n        <th>Фамилия</th>\n        <th>Имя</th>\n        <th>Отчество</th>\n        <th>Группа</th>\n        <th>Количество пересдач</th>\n        <th>Оценка</th>\n        <th>Предмет</th>\n        <th>Тип зачета</th>\n      </tr>\n      </thead>\n      <tbody>\n      {this.props.wholeJournal.map((wholeJournal) => {\n        return <tr>\n          <td>{wholeJournal.SURNAME}</td>\n          <td>{wholeJournal.NAME}</td>\n          <td>{wholeJournal.SECOND_NAME}</td>\n          <td>{wholeJournal.GR}</td>\n          <td>{wholeJournal.COUNT}</td>\n          <td style={{color: wholeJournal.MARK!=\"Неудовлетворительно\" ? \"black\" : \"red\"}}>{wholeJournal.MARK}</td>\n          <td>{wholeJournal.SUBJECT}</td>\n          <td>{wholeJournal.TYPE}</td>\n        </tr>\n      })}\n      </tbody>\n    </Table>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}